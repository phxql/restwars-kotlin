/*
 * This file is generated by jOOQ.
*/
package restwars.storage.jooq;


import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import restwars.storage.jooq.tables.*;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -523265669;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.PLAYERS</code>.
     */
    public final Players PLAYERS = restwars.storage.jooq.tables.Players.PLAYERS;

    /**
     * The table <code>PUBLIC.PLANETS</code>.
     */
    public final Planets PLANETS = restwars.storage.jooq.tables.Planets.PLANETS;

    /**
     * The table <code>PUBLIC.BUILDINGS</code>.
     */
    public final Buildings BUILDINGS = restwars.storage.jooq.tables.Buildings.BUILDINGS;

    /**
     * The table <code>PUBLIC.CONSTRUCTION_SITES</code>.
     */
    public final ConstructionSites CONSTRUCTION_SITES = restwars.storage.jooq.tables.ConstructionSites.CONSTRUCTION_SITES;

    /**
     * The table <code>PUBLIC.ROUND</code>.
     */
    public final Round ROUND = restwars.storage.jooq.tables.Round.ROUND;

    /**
     * The table <code>PUBLIC.SHIPS_IN_CONSTRUCTION</code>.
     */
    public final ShipsInConstruction SHIPS_IN_CONSTRUCTION = restwars.storage.jooq.tables.ShipsInConstruction.SHIPS_IN_CONSTRUCTION;

    /**
     * The table <code>PUBLIC.POINTS</code>.
     */
    public final Points POINTS = restwars.storage.jooq.tables.Points.POINTS;

    /**
     * The table <code>PUBLIC.EVENTS</code>.
     */
    public final Events EVENTS = restwars.storage.jooq.tables.Events.EVENTS;

    /**
     * The table <code>PUBLIC.HANGAR</code>.
     */
    public final Hangar HANGAR = restwars.storage.jooq.tables.Hangar.HANGAR;

    /**
     * The table <code>PUBLIC.HANGAR_SHIPS</code>.
     */
    public final HangarShips HANGAR_SHIPS = restwars.storage.jooq.tables.HangarShips.HANGAR_SHIPS;

    /**
     * The table <code>PUBLIC.FLIGHTS</code>.
     */
    public final Flights FLIGHTS = restwars.storage.jooq.tables.Flights.FLIGHTS;

    /**
     * The table <code>PUBLIC.FLIGHT_SHIPS</code>.
     */
    public final FlightShips FLIGHT_SHIPS = restwars.storage.jooq.tables.FlightShips.FLIGHT_SHIPS;

    /**
     * The table <code>PUBLIC.FIGHTS</code>.
     */
    public final Fights FIGHTS = restwars.storage.jooq.tables.Fights.FIGHTS;

    /**
     * The table <code>PUBLIC.FIGHT_SHIPS</code>.
     */
    public final FightShips FIGHT_SHIPS = restwars.storage.jooq.tables.FightShips.FIGHT_SHIPS;

    /**
     * The table <code>PUBLIC.DETECTED_FLIGHTS</code>.
     */
    public final DetectedFlights DETECTED_FLIGHTS = restwars.storage.jooq.tables.DetectedFlights.DETECTED_FLIGHTS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
                Players.PLAYERS,
                Planets.PLANETS,
                Buildings.BUILDINGS,
                ConstructionSites.CONSTRUCTION_SITES,
                Round.ROUND,
                ShipsInConstruction.SHIPS_IN_CONSTRUCTION,
                Points.POINTS,
                Events.EVENTS,
                Hangar.HANGAR,
                HangarShips.HANGAR_SHIPS,
                Flights.FLIGHTS,
                FlightShips.FLIGHT_SHIPS,
                Fights.FIGHTS,
                FightShips.FIGHT_SHIPS,
                DetectedFlights.DETECTED_FLIGHTS);
    }
}
