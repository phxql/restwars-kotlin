/*
 * This file is generated by jOOQ.
*/
package restwars.storage.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;
import restwars.storage.jooq.tables.FlightShips;

import javax.annotation.Generated;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FlightShipsRecord extends TableRecordImpl<FlightShipsRecord> implements Record3<UUID, String, Integer> {

    private static final long serialVersionUID = -470315546;

    /**
     * Setter for <code>PUBLIC.FLIGHT_SHIPS.FLIGHT_ID</code>.
     */
    public void setFlightId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.FLIGHT_SHIPS.FLIGHT_ID</code>.
     */
    public UUID getFlightId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PUBLIC.FLIGHT_SHIPS.TYPE</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.FLIGHT_SHIPS.TYPE</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.FLIGHT_SHIPS.AMOUNT</code>.
     */
    public void setAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.FLIGHT_SHIPS.AMOUNT</code>.
     */
    public Integer getAmount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return FlightShips.FLIGHT_SHIPS.FLIGHT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return FlightShips.FLIGHT_SHIPS.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return FlightShips.FLIGHT_SHIPS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getFlightId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightShipsRecord value1(UUID value) {
        setFlightId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightShipsRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightShipsRecord value3(Integer value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightShipsRecord values(UUID value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlightShipsRecord
     */
    public FlightShipsRecord() {
        super(FlightShips.FLIGHT_SHIPS);
    }

    /**
     * Create a detached, initialised FlightShipsRecord
     */
    public FlightShipsRecord(UUID flightId, String type, Integer amount) {
        super(FlightShips.FLIGHT_SHIPS);

        set(0, flightId);
        set(1, type);
        set(2, amount);
    }
}
