/*
 * This file is generated by jOOQ.
*/
package restwars.storage.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import restwars.storage.jooq.Keys;
import restwars.storage.jooq.Public;
import restwars.storage.jooq.tables.records.FightsRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Fights extends TableImpl<FightsRecord> {

    private static final long serialVersionUID = 318215594;

    /**
     * The reference instance of <code>PUBLIC.FIGHTS</code>
     */
    public static final Fights FIGHTS = new Fights();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FightsRecord> getRecordType() {
        return FightsRecord.class;
    }

    /**
     * The column <code>PUBLIC.FIGHTS.ID</code>.
     */
    public final TableField<FightsRecord, UUID> ID = createField("ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.ATTACKER_ID</code>.
     */
    public final TableField<FightsRecord, UUID> ATTACKER_ID = createField("ATTACKER_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.DEFENDER_ID</code>.
     */
    public final TableField<FightsRecord, UUID> DEFENDER_ID = createField("DEFENDER_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.PLANET_ID</code>.
     */
    public final TableField<FightsRecord, UUID> PLANET_ID = createField("PLANET_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.ROUND</code>.
     */
    public final TableField<FightsRecord, Long> ROUND = createField("ROUND", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.LOOT_CRYSTAL</code>.
     */
    public final TableField<FightsRecord, Integer> LOOT_CRYSTAL = createField("LOOT_CRYSTAL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FIGHTS.LOOT_GAS</code>.
     */
    public final TableField<FightsRecord, Integer> LOOT_GAS = createField("LOOT_GAS", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.FIGHTS</code> table reference
     */
    public Fights() {
        this("FIGHTS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.FIGHTS</code> table reference
     */
    public Fights(String alias) {
        this(alias, FIGHTS);
    }

    private Fights(String alias, Table<FightsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Fights(String alias, Table<FightsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FightsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7B;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FightsRecord>> getKeys() {
        return Arrays.<UniqueKey<FightsRecord>>asList(Keys.CONSTRAINT_7B);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FightsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FightsRecord, ?>>asList(Keys.CONSTRAINT_7B9, Keys.CONSTRAINT_7B99, Keys.CONSTRAINT_7B994);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Fights as(String alias) {
        return new Fights(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Fights rename(String name) {
        return new Fights(name, null);
    }
}
