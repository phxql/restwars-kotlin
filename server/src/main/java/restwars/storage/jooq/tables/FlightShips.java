/*
 * This file is generated by jOOQ.
*/
package restwars.storage.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import restwars.storage.jooq.Keys;
import restwars.storage.jooq.Public;
import restwars.storage.jooq.tables.records.FlightShipsRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FlightShips extends TableImpl<FlightShipsRecord> {

    private static final long serialVersionUID = 1536053752;

    /**
     * The reference instance of <code>PUBLIC.FLIGHT_SHIPS</code>
     */
    public static final FlightShips FLIGHT_SHIPS = new FlightShips();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FlightShipsRecord> getRecordType() {
        return FlightShipsRecord.class;
    }

    /**
     * The column <code>PUBLIC.FLIGHT_SHIPS.FLIGHT_ID</code>.
     */
    public final TableField<FlightShipsRecord, UUID> FLIGHT_ID = createField("FLIGHT_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FLIGHT_SHIPS.TYPE</code>.
     */
    public final TableField<FlightShipsRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.FLIGHT_SHIPS.AMOUNT</code>.
     */
    public final TableField<FlightShipsRecord, Integer> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.FLIGHT_SHIPS</code> table reference
     */
    public FlightShips() {
        this("FLIGHT_SHIPS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.FLIGHT_SHIPS</code> table reference
     */
    public FlightShips(String alias) {
        this(alias, FLIGHT_SHIPS);
    }

    private FlightShips(String alias, Table<FlightShipsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FlightShips(String alias, Table<FlightShipsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FlightShipsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FlightShipsRecord, ?>>asList(Keys.CONSTRAINT_50);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightShips as(String alias) {
        return new FlightShips(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FlightShips rename(String name) {
        return new FlightShips(name, null);
    }
}
