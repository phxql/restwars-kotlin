/**
 * This class is generated by jOOQ
 */
package restwars.storage.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import restwars.storage.jooq.Keys;
import restwars.storage.jooq.Public;
import restwars.storage.jooq.tables.records.DetectedFlightsRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DetectedFlights extends TableImpl<DetectedFlightsRecord> {

    private static final long serialVersionUID = -131777621;

    /**
     * The reference instance of <code>PUBLIC.DETECTED_FLIGHTS</code>
     */
    public static final DetectedFlights DETECTED_FLIGHTS = new DetectedFlights();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DetectedFlightsRecord> getRecordType() {
        return DetectedFlightsRecord.class;
    }

    /**
     * The column <code>PUBLIC.DETECTED_FLIGHTS.ID</code>.
     */
    public final TableField<DetectedFlightsRecord, UUID> ID = createField("ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DETECTED_FLIGHTS.FLIGHT_ID</code>.
     */
    public final TableField<DetectedFlightsRecord, UUID> FLIGHT_ID = createField("FLIGHT_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DETECTED_FLIGHTS.PLAYER_ID</code>.
     */
    public final TableField<DetectedFlightsRecord, UUID> PLAYER_ID = createField("PLAYER_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DETECTED_FLIGHTS.DETECTED_IN_ROUND</code>.
     */
    public final TableField<DetectedFlightsRecord, Long> DETECTED_IN_ROUND = createField("DETECTED_IN_ROUND", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DETECTED_FLIGHTS.APPROXIMATED_FLIGHT_SIZE</code>.
     */
    public final TableField<DetectedFlightsRecord, Long> APPROXIMATED_FLIGHT_SIZE = createField("APPROXIMATED_FLIGHT_SIZE", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.DETECTED_FLIGHTS</code> table reference
     */
    public DetectedFlights() {
        this("DETECTED_FLIGHTS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.DETECTED_FLIGHTS</code> table reference
     */
    public DetectedFlights(String alias) {
        this(alias, DETECTED_FLIGHTS);
    }

    private DetectedFlights(String alias, Table<DetectedFlightsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DetectedFlights(String alias, Table<DetectedFlightsRecord> aliased, Field<?>[] parameters) {
        super(alias, Public.PUBLIC, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DetectedFlightsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DetectedFlightsRecord>> getKeys() {
        return Arrays.<UniqueKey<DetectedFlightsRecord>>asList(Keys.CONSTRAINT_2, Keys.CONSTRAINT_2A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DetectedFlightsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DetectedFlightsRecord, ?>>asList(Keys.CONSTRAINT_2AD, Keys.CONSTRAINT_2AD5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectedFlights as(String alias) {
        return new DetectedFlights(alias, this);
    }

    /**
     * Rename this table
     */
    public DetectedFlights rename(String name) {
        return new DetectedFlights(name, null);
    }
}
