/**
 * This class is generated by jOOQ
 */
package restwars.storage.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import restwars.storage.jooq.Keys;
import restwars.storage.jooq.Public;
import restwars.storage.jooq.tables.records.PlanetsRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Planets extends TableImpl<PlanetsRecord> {

    private static final long serialVersionUID = 416590449;

    /**
     * The reference instance of <code>PUBLIC.PLANETS</code>
     */
    public static final Planets PLANETS = new Planets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlanetsRecord> getRecordType() {
        return PlanetsRecord.class;
    }

    /**
     * The column <code>PUBLIC.PLANETS.ID</code>.
     */
    public final TableField<PlanetsRecord, UUID> ID = createField("ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.OWNER_ID</code>.
     */
    public final TableField<PlanetsRecord, UUID> OWNER_ID = createField("OWNER_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.GALAXY</code>.
     */
    public final TableField<PlanetsRecord, Integer> GALAXY = createField("GALAXY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.SYSTEM</code>.
     */
    public final TableField<PlanetsRecord, Integer> SYSTEM = createField("SYSTEM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.PLANET</code>.
     */
    public final TableField<PlanetsRecord, Integer> PLANET = createField("PLANET", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.CRYSTAL</code>.
     */
    public final TableField<PlanetsRecord, Integer> CRYSTAL = createField("CRYSTAL", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.GAS</code>.
     */
    public final TableField<PlanetsRecord, Integer> GAS = createField("GAS", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PLANETS.ENERGY</code>.
     */
    public final TableField<PlanetsRecord, Integer> ENERGY = createField("ENERGY", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.PLANETS</code> table reference
     */
    public Planets() {
        this("PLANETS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.PLANETS</code> table reference
     */
    public Planets(String alias) {
        this(alias, PLANETS);
    }

    private Planets(String alias, Table<PlanetsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Planets(String alias, Table<PlanetsRecord> aliased, Field<?>[] parameters) {
        super(alias, Public.PUBLIC, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlanetsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_D5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlanetsRecord>> getKeys() {
        return Arrays.<UniqueKey<PlanetsRecord>>asList(Keys.CONSTRAINT_D5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PlanetsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PlanetsRecord, ?>>asList(Keys.CONSTRAINT_D5B);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Planets as(String alias) {
        return new Planets(alias, this);
    }

    /**
     * Rename this table
     */
    public Planets rename(String name) {
        return new Planets(name, null);
    }
}
