/*
 * This file is generated by jOOQ.
*/
package restwars.storage.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import restwars.storage.jooq.tables.Hangar;

import javax.annotation.Generated;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class HangarRecord extends UpdatableRecordImpl<HangarRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1593614545;

    /**
     * Setter for <code>PUBLIC.HANGAR.ID</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.HANGAR.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PUBLIC.HANGAR.PLANET_ID</code>.
     */
    public void setPlanetId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.HANGAR.PLANET_ID</code>.
     */
    public UUID getPlanetId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Hangar.HANGAR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return Hangar.HANGAR.PLANET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getPlanetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HangarRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HangarRecord value2(UUID value) {
        setPlanetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HangarRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HangarRecord
     */
    public HangarRecord() {
        super(Hangar.HANGAR);
    }

    /**
     * Create a detached, initialised HangarRecord
     */
    public HangarRecord(UUID id, UUID planetId) {
        super(Hangar.HANGAR);

        set(0, id);
        set(1, planetId);
    }
}
