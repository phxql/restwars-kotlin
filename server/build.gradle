apply plugin: 'application'

// Git helper functions
apply from: "$rootProject.projectDir/gradle/git.gradle"

mainClassName = 'restwars.RestWarsKt'

dependencies {
    compile project(':api')

    // REST layer
    compile('com.sparkjava:spark-core:2.3') {
        exclude module: 'slf4j-simple'
    }
    // Validation
    compile 'org.hibernate:hibernate-validator:5.2.3.Final'
    // Logging API
    compile 'org.slf4j:slf4j-api:1.7.14'
    // JSON & YAML
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.7.1-2'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.1'

    // Metrics
    compile 'io.dropwizard.metrics:metrics-core:3.1.2'
    compile 'io.dropwizard.metrics:metrics-json:3.1.2'

    // Needed for validation
    runtime 'javax.el:javax.el-api:2.2.5'
    runtime 'org.glassfish.web:javax.el:2.2.6'

    // Logging backend
    runtime 'ch.qos.logback:logback-classic:1.1.3'

    // Database
    compile 'org.flywaydb:flyway-core:4.0'
    compile "com.h2database:h2:$h2_version"
    compile 'com.mchange:c3p0:0.9.5.2'
    compile "org.jooq:jooq:$jooq_version"

    // Testing
    testCompile 'junit:junit:4.12'
}


import groovy.xml.MarkupBuilder
import org.apache.tools.ant.filters.ReplaceTokens
import org.jooq.util.GenerationTool

import javax.xml.bind.JAXB

processResources {
    filter ReplaceTokens, tokens: [
            "project.version": project.version,
            "git.hash"       : getCheckedOutGitCommitHash()
    ]
}

task('generateJooq').doLast {
    def writer = new StringWriter()
    new MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd') {
        jdbc() {
            driver('org.h2.Driver')
            url('jdbc:h2:./server/data/restwars')
            user('')
            password('')
        }
        generator() {
            database() {
                inputSchema('PUBLIC')
                excludes('SCHEMA_VERSION')
            }
            generate([:]) {
                pojos false
                daos false
            }
            target() {
                packageName('restwars.storage.jooq')
                directory('server/src/main/java')
            }
        }
    }

    GenerationTool.generate(JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class))
}